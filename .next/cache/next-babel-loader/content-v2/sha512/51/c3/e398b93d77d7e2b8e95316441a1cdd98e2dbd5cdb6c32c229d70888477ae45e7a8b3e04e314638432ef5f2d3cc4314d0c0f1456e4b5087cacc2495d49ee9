{"ast":null,"code":"import { connectToDatabase } from '../../../utils/mongodb';\nexport default (async (req, res) => {\n  const {\n    query: {\n      id\n    },\n    method\n  } = req;\n  const {\n    db\n  } = await connectToDatabase();\n\n  switch (method) {\n    case 'GET':\n      try {\n        // const campground = await db\n        // \t.collection('campgrounds')\n        // \t.find({ _id: ObjectId(`${id}`) })\n        // \t.toArray();\n        res.end('campground');\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n    //   case 'PUT':\n    //     // Update or create data in your database\n    //     res.status(200).json({ id, name: name || `User ${id}` })\n    //     break\n    // default:\n    // \tres.setHeader('Allow', ['GET']);\n    // \tres.status(405).end(`Method ${method} Not Allowed`);\n  }\n});","map":{"version":3,"sources":["/Users/joemccann/Desktop/yelpcamp-nexjs/pages/api/campground/[id].js"],"names":["connectToDatabase","req","res","query","id","method","db","end","error","status","json","success"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,wBAAlC;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAM;AACLC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADF;AAELC,IAAAA;AAFK,MAGFJ,GAHJ;AAKA,QAAM;AAAEK,IAAAA;AAAF,MAAS,MAAMN,iBAAiB,EAAtC;;AAEA,UAAQK,MAAR;AACC,SAAK,KAAL;AACC,UAAI;AACH;AACA;AACA;AACA;AAEAH,QAAAA,GAAG,CAACK,GAAJ,CAAQ,YAAR;AACA,OAPD,CAOE,OAAOC,KAAP,EAAc;AACfN,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAArB;AACA;;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AApBD;AAsBA,CA9BD","sourcesContent":["import { connectToDatabase } from '../../../utils/mongodb';\n\nexport default async (req, res) => {\n\tconst {\n\t\tquery: { id },\n\t\tmethod,\n\t} = req;\n\n\tconst { db } = await connectToDatabase();\n\n\tswitch (method) {\n\t\tcase 'GET':\n\t\t\ttry {\n\t\t\t\t// const campground = await db\n\t\t\t\t// \t.collection('campgrounds')\n\t\t\t\t// \t.find({ _id: ObjectId(`${id}`) })\n\t\t\t\t// \t.toArray();\n\n\t\t\t\tres.end('campground');\n\t\t\t} catch (error) {\n\t\t\t\tres.status(400).json({ success: false });\n\t\t\t}\n\n\t\t\tbreak;\n\t\t//   case 'PUT':\n\t\t//     // Update or create data in your database\n\t\t//     res.status(200).json({ id, name: name || `User ${id}` })\n\t\t//     break\n\t\t// default:\n\t\t// \tres.setHeader('Allow', ['GET']);\n\t\t// \tres.status(405).end(`Method ${method} Not Allowed`);\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}