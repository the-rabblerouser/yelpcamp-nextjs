{"ast":null,"code":"import { connectToDatabase } from '../../utils/mongodb';\nexport default (async (req, res) => {\n  const {\n    method\n  } = req;\n  const {\n    db\n  } = await connectToDatabase();\n\n  switch (method) {\n    case 'GET':\n      try {\n        const campgrounds = await db.collection('campgrounds').find({}).sort({\n          metacritic: -1\n        }).limit(20).toArray();\n        res.json(campgrounds);\n      } catch (error) {\n        expect(error).toBeNull();\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n\n    case 'POST':\n      try {\n        const campgrounds = await db.collection('campgrounds').insertOne({\n          title: 'Camp Bob',\n          price: '$20',\n          description: 'This is a camp for people',\n          location: 'home'\n        });\n        res.send(campgrounds);\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n  }\n});","map":{"version":3,"sources":["/Users/joemccann/Desktop/yelpcamp-nexjs/pages/api/campgrounds.js"],"names":["connectToDatabase","req","res","method","db","campgrounds","collection","find","sort","metacritic","limit","toArray","json","error","expect","toBeNull","status","success","insertOne","title","price","description","location","send"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAaF,GAAnB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAS,MAAMJ,iBAAiB,EAAtC;;AAEA,UAAQG,MAAR;AACC,SAAK,KAAL;AACC,UAAI;AACH,cAAME,WAAW,GAAG,MAAMD,EAAE,CAC1BE,UADwB,CACb,aADa,EAExBC,IAFwB,CAEnB,EAFmB,EAGxBC,IAHwB,CAGnB;AAAEC,UAAAA,UAAU,EAAE,CAAC;AAAf,SAHmB,EAIxBC,KAJwB,CAIlB,EAJkB,EAKxBC,OALwB,EAA1B;AAOAT,QAAAA,GAAG,CAACU,IAAJ,CAASP,WAAT;AACA,OATD,CASE,OAAOQ,KAAP,EAAc;AACfC,QAAAA,MAAM,CAACD,KAAD,CAAN,CAAcE,QAAd;AACAb,QAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AAAEK,UAAAA,OAAO,EAAE;AAAX,SAArB;AACA;;AACD;;AACD,SAAK,MAAL;AACC,UAAI;AACH,cAAMZ,WAAW,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,aAAd,EAA6BY,SAA7B,CAAuC;AAChEC,UAAAA,KAAK,EAAE,UADyD;AAEhEC,UAAAA,KAAK,EAAE,KAFyD;AAGhEC,UAAAA,WAAW,EAAE,2BAHmD;AAIhEC,UAAAA,QAAQ,EAAE;AAJsD,SAAvC,CAA1B;AAOApB,QAAAA,GAAG,CAACqB,IAAJ,CAASlB,WAAT;AACA,OATD,CASE,OAAOQ,KAAP,EAAc;AACfX,QAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBJ,IAAhB,CAAqB;AAAEK,UAAAA,OAAO,EAAE;AAAX,SAArB;AACA;;AA5BH;AA8BA,CAlCD","sourcesContent":["import { connectToDatabase } from '../../utils/mongodb';\n\nexport default async (req, res) => {\n\tconst { method } = req;\n\tconst { db } = await connectToDatabase();\n\n\tswitch (method) {\n\t\tcase 'GET':\n\t\t\ttry {\n\t\t\t\tconst campgrounds = await db\n\t\t\t\t\t.collection('campgrounds')\n\t\t\t\t\t.find({})\n\t\t\t\t\t.sort({ metacritic: -1 })\n\t\t\t\t\t.limit(20)\n\t\t\t\t\t.toArray();\n\n\t\t\t\tres.json(campgrounds);\n\t\t\t} catch (error) {\n\t\t\t\texpect(error).toBeNull();\n\t\t\t\tres.status(400).json({ success: false });\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'POST':\n\t\t\ttry {\n\t\t\t\tconst campgrounds = await db.collection('campgrounds').insertOne({\n\t\t\t\t\ttitle: 'Camp Bob',\n\t\t\t\t\tprice: '$20',\n\t\t\t\t\tdescription: 'This is a camp for people',\n\t\t\t\t\tlocation: 'home',\n\t\t\t\t});\n\n\t\t\t\tres.send(campgrounds);\n\t\t\t} catch (error) {\n\t\t\t\tres.status(400).json({ success: false });\n\t\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}