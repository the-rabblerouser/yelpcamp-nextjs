{"ast":null,"code":"import { connectToDatabase } from '../../utils/mongodb';\nexport default (async (req, res) => {\n  const {\n    method\n  } = req;\n  const {\n    db\n  } = await connectToDatabase();\n\n  switch (method) {\n    // case 'GET':\n    // \ttry {\n    // \t\tconst campgrounds = await db\n    // \t\t\t.collection('campgrounds')\n    // \t\t\t.find({})\n    // \t\t\t.sort()\n    // \t\t\t.limit(500)\n    // \t\t\t.toArray();\n    // \t\tres.json(campgrounds);\n    // \t} catch (error) {\n    // \t\tres.status(400).json({ success: false });\n    // \t}\n    // \tbreak;\n    case 'GET':\n      try {\n        const campgrounds = await db.collection('campgrounds').insert({\n          title: 'Camp Bob',\n          location: 'home'\n        });\n        res.send(campgrounds);\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n\n    default:\n      res.setHeader('Allow', ['GET', 'POST']);\n  }\n\n  res.status(405).end(`Method ${method} Not Allowed`);\n}); // // Test for POST Route\n// case 'POST':\n// \ttry {\n// \t\tlet data = req.body;\n// \t\tdata = JSON.parse(data);\n// \t\tconst campgrounds = await db.collection('campgrounds').insertOne(data);\n// \t\tres.json(campgrounds);\n// \t} catch (error) {\n// \t\tres.status(400).json({ success: false });\n// \t}\n// \tbreak;","map":{"version":3,"sources":["/Users/joemccann/Desktop/yelpcamp-nexjs/pages/api/campgrounds.js"],"names":["connectToDatabase","req","res","method","db","campgrounds","collection","insert","title","location","send","error","status","json","success","setHeader","end"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAaF,GAAnB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAS,MAAMJ,iBAAiB,EAAtC;;AAEA,UAAQG,MAAR;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,SAAK,KAAL;AACC,UAAI;AACH,cAAME,WAAW,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,aAAd,EAA6BC,MAA7B,CAAoC;AAC7DC,UAAAA,KAAK,EAAE,UADsD;AAE7DC,UAAAA,QAAQ,EAAE;AAFmD,SAApC,CAA1B;AAKAP,QAAAA,GAAG,CAACQ,IAAJ,CAASL,WAAT;AACA,OAPD,CAOE,OAAOM,KAAP,EAAc;AACfT,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAArB;AACA;;AACD;;AACD;AACCZ,MAAAA,GAAG,CAACa,SAAJ,CAAc,OAAd,EAAuB,CAAC,KAAD,EAAQ,MAAR,CAAvB;AA7BF;;AA+BAb,EAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBI,GAAhB,CAAqB,UAASb,MAAO,cAArC;AACA,CApCD,E,CAsCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import { connectToDatabase } from '../../utils/mongodb';\n\nexport default async (req, res) => {\n\tconst { method } = req;\n\tconst { db } = await connectToDatabase();\n\n\tswitch (method) {\n\t\t// case 'GET':\n\t\t// \ttry {\n\t\t// \t\tconst campgrounds = await db\n\t\t// \t\t\t.collection('campgrounds')\n\t\t// \t\t\t.find({})\n\t\t// \t\t\t.sort()\n\t\t// \t\t\t.limit(500)\n\t\t// \t\t\t.toArray();\n\n\t\t// \t\tres.json(campgrounds);\n\t\t// \t} catch (error) {\n\t\t// \t\tres.status(400).json({ success: false });\n\t\t// \t}\n\t\t// \tbreak;\n\n\t\tcase 'GET':\n\t\t\ttry {\n\t\t\t\tconst campgrounds = await db.collection('campgrounds').insert({\n\t\t\t\t\ttitle: 'Camp Bob',\n\t\t\t\t\tlocation: 'home',\n\t\t\t\t});\n\n\t\t\t\tres.send(campgrounds);\n\t\t\t} catch (error) {\n\t\t\t\tres.status(400).json({ success: false });\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tres.setHeader('Allow', ['GET', 'POST']);\n\t}\n\tres.status(405).end(`Method ${method} Not Allowed`);\n};\n\n// // Test for POST Route\n// case 'POST':\n// \ttry {\n// \t\tlet data = req.body;\n// \t\tdata = JSON.parse(data);\n// \t\tconst campgrounds = await db.collection('campgrounds').insertOne(data);\n\n// \t\tres.json(campgrounds);\n// \t} catch (error) {\n// \t\tres.status(400).json({ success: false });\n// \t}\n// \tbreak;\n"]},"metadata":{},"sourceType":"module"}