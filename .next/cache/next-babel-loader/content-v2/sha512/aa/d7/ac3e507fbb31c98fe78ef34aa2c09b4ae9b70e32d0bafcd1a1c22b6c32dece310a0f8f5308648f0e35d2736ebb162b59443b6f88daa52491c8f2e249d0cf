{"ast":null,"code":"import { connectToDatabase } from '../../utils/mongodb';\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\nexport default (async (req, res) => {\n  const {\n    method\n  } = req;\n  const {\n    db\n  } = await connectToDatabase();\n\n  switch (method) {\n    case 'GET':\n      try {\n        const campgrounds = await db.collection('campgrounds').find({}).sort().limit(20).toArray();\n        res.json(campgrounds);\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n    // Test for POST Route\n\n    case 'POST':\n      try {\n        const campgrounds = await db.collection('campgrounds').insertOne(req.body);\n        res.json(campgrounds);\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n  }\n});","map":{"version":3,"sources":["/Users/joemccann/Desktop/yelpcamp-nexjs/pages/api/campgrounds.js"],"names":["connectToDatabase","config","api","bodyParser","req","res","method","db","campgrounds","collection","find","sort","limit","toArray","json","error","status","success","insertOne","body"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,MAAMC,MAAM,GAAG;AACrBC,EAAAA,GAAG,EAAE;AACJC,IAAAA,UAAU,EAAE;AADR;AADgB,CAAf;AAMP,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAaF,GAAnB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAS,MAAMP,iBAAiB,EAAtC;;AAEA,UAAQM,MAAR;AACC,SAAK,KAAL;AACC,UAAI;AACH,cAAME,WAAW,GAAG,MAAMD,EAAE,CAC1BE,UADwB,CACb,aADa,EAExBC,IAFwB,CAEnB,EAFmB,EAGxBC,IAHwB,GAIxBC,KAJwB,CAIlB,EAJkB,EAKxBC,OALwB,EAA1B;AAOAR,QAAAA,GAAG,CAACS,IAAJ,CAASN,WAAT;AACA,OATD,CASE,OAAOO,KAAP,EAAc;AACfV,QAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAArB;AACA;;AACD;AAED;;AACA,SAAK,MAAL;AACC,UAAI;AACH,cAAMT,WAAW,GAAG,MAAMD,EAAE,CAC1BE,UADwB,CACb,aADa,EAExBS,SAFwB,CAEdd,GAAG,CAACe,IAFU,CAA1B;AAIAd,QAAAA,GAAG,CAACS,IAAJ,CAASN,WAAT;AACA,OAND,CAME,OAAOO,KAAP,EAAc;AACfV,QAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAArB;AACA;;AACD;AA3BF;AA6BA,CAjCD","sourcesContent":["import { connectToDatabase } from '../../utils/mongodb';\n\nexport const config = {\n\tapi: {\n\t\tbodyParser: false,\n\t},\n};\n\nexport default async (req, res) => {\n\tconst { method } = req;\n\tconst { db } = await connectToDatabase();\n\n\tswitch (method) {\n\t\tcase 'GET':\n\t\t\ttry {\n\t\t\t\tconst campgrounds = await db\n\t\t\t\t\t.collection('campgrounds')\n\t\t\t\t\t.find({})\n\t\t\t\t\t.sort()\n\t\t\t\t\t.limit(20)\n\t\t\t\t\t.toArray();\n\n\t\t\t\tres.json(campgrounds);\n\t\t\t} catch (error) {\n\t\t\t\tres.status(400).json({ success: false });\n\t\t\t}\n\t\t\tbreak;\n\n\t\t// Test for POST Route\n\t\tcase 'POST':\n\t\t\ttry {\n\t\t\t\tconst campgrounds = await db\n\t\t\t\t\t.collection('campgrounds')\n\t\t\t\t\t.insertOne(req.body);\n\n\t\t\t\tres.json(campgrounds);\n\t\t\t} catch (error) {\n\t\t\t\tres.status(400).json({ success: false });\n\t\t\t}\n\t\t\tbreak;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}