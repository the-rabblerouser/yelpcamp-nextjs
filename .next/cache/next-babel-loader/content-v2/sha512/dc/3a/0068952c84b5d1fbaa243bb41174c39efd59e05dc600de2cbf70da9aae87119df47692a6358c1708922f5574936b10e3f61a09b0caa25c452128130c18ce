{"ast":null,"code":"import { connectToDatabase } from '../../utils/mongodb';\nexport default (async (req, res) => {\n  const {\n    method\n  } = req;\n  const {\n    db\n  } = await connectToDatabase();\n\n  switch (method) {\n    case 'GET':\n      try {\n        const campgrounds = await db.collection('campgrounds').find({}).sort().limit(500).toArray();\n        res.json(campgrounds);\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n\n    case 'POST':\n      try {\n        const campgrounds = await db.collection('campgrounds').insert({\n          title: req.body.title,\n          location: req.body.location\n        });\n        res.send(campgrounds);\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n\n    default:\n      res.setHeader('Allow', ['GET', 'POST']);\n      res.status(405).end(`Method ${method} Not Allowed`);\n  }\n});","map":{"version":3,"sources":["/Users/joemccann/Desktop/yelpcamp-nexjs/pages/api/campgrounds.js"],"names":["connectToDatabase","req","res","method","db","campgrounds","collection","find","sort","limit","toArray","json","error","status","success","insert","title","body","location","send","setHeader","end"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAaF,GAAnB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAS,MAAMJ,iBAAiB,EAAtC;;AAEA,UAAQG,MAAR;AACC,SAAK,KAAL;AACC,UAAI;AACH,cAAME,WAAW,GAAG,MAAMD,EAAE,CAC1BE,UADwB,CACb,aADa,EAExBC,IAFwB,CAEnB,EAFmB,EAGxBC,IAHwB,GAIxBC,KAJwB,CAIlB,GAJkB,EAKxBC,OALwB,EAA1B;AAOAR,QAAAA,GAAG,CAACS,IAAJ,CAASN,WAAT;AACA,OATD,CASE,OAAOO,KAAP,EAAc;AACfV,QAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAArB;AACA;;AACD;;AAED,SAAK,MAAL;AACC,UAAI;AACH,cAAMT,WAAW,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,aAAd,EAA6BS,MAA7B,CAAoC;AAC7DC,UAAAA,KAAK,EAAEf,GAAG,CAACgB,IAAJ,CAASD,KAD6C;AAE7DE,UAAAA,QAAQ,EAAEjB,GAAG,CAACgB,IAAJ,CAASC;AAF0C,SAApC,CAA1B;AAKAhB,QAAAA,GAAG,CAACiB,IAAJ,CAASd,WAAT;AACA,OAPD,CAOE,OAAOO,KAAP,EAAc;AACfV,QAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAArB;AACA;;AACD;;AACD;AACCZ,MAAAA,GAAG,CAACkB,SAAJ,CAAc,OAAd,EAAuB,CAAC,KAAD,EAAQ,MAAR,CAAvB;AACAlB,MAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBQ,GAAhB,CAAqB,UAASlB,MAAO,cAArC;AA9BF;AAgCA,CApCD","sourcesContent":["import { connectToDatabase } from '../../utils/mongodb';\n\nexport default async (req, res) => {\n\tconst { method } = req;\n\tconst { db } = await connectToDatabase();\n\n\tswitch (method) {\n\t\tcase 'GET':\n\t\t\ttry {\n\t\t\t\tconst campgrounds = await db\n\t\t\t\t\t.collection('campgrounds')\n\t\t\t\t\t.find({})\n\t\t\t\t\t.sort()\n\t\t\t\t\t.limit(500)\n\t\t\t\t\t.toArray();\n\n\t\t\t\tres.json(campgrounds);\n\t\t\t} catch (error) {\n\t\t\t\tres.status(400).json({ success: false });\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'POST':\n\t\t\ttry {\n\t\t\t\tconst campgrounds = await db.collection('campgrounds').insert({\n\t\t\t\t\ttitle: req.body.title,\n\t\t\t\t\tlocation: req.body.location,\n\t\t\t\t});\n\n\t\t\t\tres.send(campgrounds);\n\t\t\t} catch (error) {\n\t\t\t\tres.status(400).json({ success: false });\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tres.setHeader('Allow', ['GET', 'POST']);\n\t\t\tres.status(405).end(`Method ${method} Not Allowed`);\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}