{"ast":null,"code":"import { connectToDatabase } from '../../utils/mongodb';\n\nconst cities = require('../../utils/seed_data/cities');\n\nconst {\n  places,\n  descriptors\n} = require('../../utils/seed_data/seedHelpers');\n\nexport default (async (req, res) => {\n  const {\n    db\n  } = await connectToDatabase();\n\n  const sample = array => array[Math.floor(Math.random() * array.length)];\n\n  try {\n    //!!!WARNING!!!\n    // !!!Uncomment to remove all data in seed data base!!!\n    // const remove_data = await db.collection('campgrounds').deleteMany();\n    // res.send(remove_data);\n    // **********************************************************************\n    for (let i = 0; i < 50; i++) {\n      const random1000 = Math.floor(Math.random() * 1000);\n      const camp = {\n        location: `${cities[random1000].city}, ${cities[random1000].state}`,\n        title: `${sample(descriptors)} ${sample(places)}`\n      };\n      const campgrounds = await db.collection('campgrounds').insert(camp);\n      res.send(campgrounds);\n    }\n  } catch (error) {\n    res.status(400).json({\n      success: false\n    });\n  }\n});","map":{"version":3,"sources":["/Users/joemccann/Desktop/yelpcamp-nexjs/pages/api/seed.js"],"names":["connectToDatabase","cities","require","places","descriptors","req","res","db","sample","array","Math","floor","random","length","i","random1000","camp","location","city","state","title","campgrounds","collection","insert","send","error","status","json","success"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qBAAlC;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,8BAAD,CAAtB;;AACA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAA0BF,OAAO,CAAC,mCAAD,CAAvC;;AAEA,gBAAe,OAAOG,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAS,MAAMP,iBAAiB,EAAtC;;AAEA,QAAMQ,MAAM,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,KAAK,CAACI,MAAjC,CAAD,CAA/B;;AAEA,MAAI;AACH;AACA;AAEA;AACA;AAEA;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC5B,YAAMC,UAAU,GAAGL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAnB;AACA,YAAMI,IAAI,GAAG;AACZC,QAAAA,QAAQ,EAAG,GAAEhB,MAAM,CAACc,UAAD,CAAN,CAAmBG,IAAK,KAAIjB,MAAM,CAACc,UAAD,CAAN,CAAmBI,KAAM,EADtD;AAEZC,QAAAA,KAAK,EAAG,GAAEZ,MAAM,CAACJ,WAAD,CAAc,IAAGI,MAAM,CAACL,MAAD,CAAS;AAFpC,OAAb;AAIA,YAAMkB,WAAW,GAAG,MAAMd,EAAE,CAACe,UAAH,CAAc,aAAd,EAA6BC,MAA7B,CAAoCP,IAApC,CAA1B;AACAV,MAAAA,GAAG,CAACkB,IAAJ,CAASH,WAAT;AACA;AACD,GAlBD,CAkBE,OAAOI,KAAP,EAAc;AACfnB,IAAAA,GAAG,CAACoB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACA;AACD,CA1BD","sourcesContent":["import { connectToDatabase } from '../../utils/mongodb';\nconst cities = require('../../utils/seed_data/cities');\nconst { places, descriptors } = require('../../utils/seed_data/seedHelpers');\n\nexport default async (req, res) => {\n\tconst { db } = await connectToDatabase();\n\n\tconst sample = (array) => array[Math.floor(Math.random() * array.length)];\n\n\ttry {\n\t\t//!!!WARNING!!!\n\t\t// !!!Uncomment to remove all data in seed data base!!!\n\n\t\t// const remove_data = await db.collection('campgrounds').deleteMany();\n\t\t// res.send(remove_data);\n\n\t\t// **********************************************************************\n\n\t\tfor (let i = 0; i < 50; i++) {\n\t\t\tconst random1000 = Math.floor(Math.random() * 1000);\n\t\t\tconst camp = {\n\t\t\t\tlocation: `${cities[random1000].city}, ${cities[random1000].state}`,\n\t\t\t\ttitle: `${sample(descriptors)} ${sample(places)}`,\n\t\t\t};\n\t\t\tconst campgrounds = await db.collection('campgrounds').insert(camp);\n\t\t\tres.send(campgrounds);\n\t\t}\n\t} catch (error) {\n\t\tres.status(400).json({ success: false });\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}