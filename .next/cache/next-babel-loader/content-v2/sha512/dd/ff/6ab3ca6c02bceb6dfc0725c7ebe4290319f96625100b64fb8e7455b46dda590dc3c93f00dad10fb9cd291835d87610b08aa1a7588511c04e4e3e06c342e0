{"ast":null,"code":"import { isValidObjectId } from 'mongoose';\nimport { connectToDatabase } from '../../../utils/mongodb';\nexport default (async (req, res) => {\n  const {\n    db\n  } = await connectToDatabase();\n  const {\n    query: {\n      id\n    },\n    method\n  } = req;\n\n  switch (method) {\n    case 'GET':\n      try {\n        const campground = await db.collection('campgrounds').find({\n          _id: `60106772888576006654fdcf`\n        }).toArray();\n        res.json(campground);\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n    //   case 'PUT':\n    //     // Update or create data in your database\n    //     res.status(200).json({ id, name: name || `User ${id}` })\n    //     break\n    // default:\n    // \tres.setHeader('Allow', ['GET']);\n    // \tres.status(405).end(`Method ${method} Not Allowed`);\n  }\n});","map":{"version":3,"sources":["/Users/joemccann/Desktop/yelpcamp-nexjs/pages/api/campground/[id].js"],"names":["isValidObjectId","connectToDatabase","req","res","db","query","id","method","campground","collection","find","_id","toArray","json","error","status","success"],"mappings":"AAAA,SAASA,eAAT,QAAgC,UAAhC;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAS,MAAMH,iBAAiB,EAAtC;AACA,QAAM;AACLI,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADF;AAELC,IAAAA;AAFK,MAGFL,GAHJ;;AAKA,UAAQK,MAAR;AACC,SAAK,KAAL;AACC,UAAI;AACH,cAAMC,UAAU,GAAG,MAAMJ,EAAE,CACzBK,UADuB,CACZ,aADY,EAEvBC,IAFuB,CAElB;AAAEC,UAAAA,GAAG,EAAG;AAAR,SAFkB,EAGvBC,OAHuB,EAAzB;AAKAT,QAAAA,GAAG,CAACU,IAAJ,CAASL,UAAT;AACA,OAPD,CAOE,OAAOM,KAAP,EAAc;AACfX,QAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAArB;AACA;;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AApBD;AAsBA,CA7BD","sourcesContent":["import { isValidObjectId } from 'mongoose';\nimport { connectToDatabase } from '../../../utils/mongodb';\n\nexport default async (req, res) => {\n\tconst { db } = await connectToDatabase();\n\tconst {\n\t\tquery: { id },\n\t\tmethod,\n\t} = req;\n\n\tswitch (method) {\n\t\tcase 'GET':\n\t\t\ttry {\n\t\t\t\tconst campground = await db\n\t\t\t\t\t.collection('campgrounds')\n\t\t\t\t\t.find({ _id: `60106772888576006654fdcf` })\n\t\t\t\t\t.toArray();\n\n\t\t\t\tres.json(campground);\n\t\t\t} catch (error) {\n\t\t\t\tres.status(400).json({ success: false });\n\t\t\t}\n\n\t\t\tbreak;\n\t\t//   case 'PUT':\n\t\t//     // Update or create data in your database\n\t\t//     res.status(200).json({ id, name: name || `User ${id}` })\n\t\t//     break\n\t\t// default:\n\t\t// \tres.setHeader('Allow', ['GET']);\n\t\t// \tres.status(405).end(`Method ${method} Not Allowed`);\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}